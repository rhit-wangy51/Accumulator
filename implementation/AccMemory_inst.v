// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 18.1 (Build Build 625 09/12/2018)
// Created on Wed May 18 10:39:42 2022

AccMemory AccMemory_inst
(
	.CLK(CLK_sig) ,	// input  CLK_sig
	.PC(PC_sig) ,	// input [15:0] PC_sig
	.ACC(ACC_sig) ,	// input [15:0] ACC_sig
	.IR(IR_sig) ,	// input [15:0] IR_sig
	.ALUOut(ALUOut_sig) ,	// input [15:0] ALUOut_sig
	.Reset(Reset_sig) ,	// input [0:0] Reset_sig
	.IOIn(IOIn_sig) ,	// input [15:0] IOIn_sig
	.PCSrc(PCSrc_sig) ,	// output [1:0] PCSrc_sig
	.SPWrite(SPWrite_sig) ,	// output [0:0] SPWrite_sig
	.ACCSrc(ACCSrc_sig) ,	// output [2:0] ACCSrc_sig
	.ACCWrite(ACCWrite_sig) ,	// output [0:0] ACCWrite_sig
	.ALUSrcA(ALUSrcA_sig) ,	// output [1:0] ALUSrcA_sig
	.ALUSrcB(ALUSrcB_sig) ,	// output [2:0] ALUSrcB_sig
	.ALUOp(ALUOp_sig) ,	// output [1:0] ALUOp_sig
	.BneOrBeq(BneOrBeq_sig) ,	// output [1:0] BneOrBeq_sig
	.PCWrite(PCWrite_sig) ,	// output [1:0] PCWrite_sig
	.Branch(Branch_sig) ,	// output [1:0] Branch_sig
	.IRROut(IRROut_sig) ,	// output [15:0] IRROut_sig
	.MDROut(MDROut_sig) ,	// output [15:0] MDROut_sig
	.IOOut(IOOut_sig) ,	// output [15:0] IOOut_sig
	.MemOut(MemOut_sig) 	// output [15:0] MemOut_sig
);

defparam AccMemory_inst.RA = 'b0000011111111110;
